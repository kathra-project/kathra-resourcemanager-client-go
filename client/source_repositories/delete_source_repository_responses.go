// Code generated by go-swagger; DO NOT EDIT.

package source_repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteSourceRepositoryReader is a Reader for the DeleteSourceRepository structure.
type DeleteSourceRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSourceRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteSourceRepositoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteSourceRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSourceRepositoryOK creates a DeleteSourceRepositoryOK with default headers values
func NewDeleteSourceRepositoryOK() *DeleteSourceRepositoryOK {
	return &DeleteSourceRepositoryOK{}
}

/*DeleteSourceRepositoryOK handles this case with default header values.

Object is deleted
*/
type DeleteSourceRepositoryOK struct {
	Payload string
}

func (o *DeleteSourceRepositoryOK) Error() string {
	return fmt.Sprintf("[DELETE /sourcerepositories/{resourceId}][%d] deleteSourceRepositoryOK  %+v", 200, o.Payload)
}

func (o *DeleteSourceRepositoryOK) GetPayload() string {
	return o.Payload
}

func (o *DeleteSourceRepositoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSourceRepositoryUnauthorized creates a DeleteSourceRepositoryUnauthorized with default headers values
func NewDeleteSourceRepositoryUnauthorized() *DeleteSourceRepositoryUnauthorized {
	return &DeleteSourceRepositoryUnauthorized{}
}

/*DeleteSourceRepositoryUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteSourceRepositoryUnauthorized struct {
}

func (o *DeleteSourceRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /sourcerepositories/{resourceId}][%d] deleteSourceRepositoryUnauthorized ", 401)
}

func (o *DeleteSourceRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
