// Code generated by go-swagger; DO NOT EDIT.

package libraries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	Library "github.com/kathra-project/kathra-core-model-go/models"
)

// NewUpdateLibraryAttributesParams creates a new UpdateLibraryAttributesParams object
// with the default values initialized.
func NewUpdateLibraryAttributesParams() *UpdateLibraryAttributesParams {
	var ()
	return &UpdateLibraryAttributesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateLibraryAttributesParamsWithTimeout creates a new UpdateLibraryAttributesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateLibraryAttributesParamsWithTimeout(timeout time.Duration) *UpdateLibraryAttributesParams {
	var ()
	return &UpdateLibraryAttributesParams{

		timeout: timeout,
	}
}

// NewUpdateLibraryAttributesParamsWithContext creates a new UpdateLibraryAttributesParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateLibraryAttributesParamsWithContext(ctx context.Context) *UpdateLibraryAttributesParams {
	var ()
	return &UpdateLibraryAttributesParams{

		Context: ctx,
	}
}

// NewUpdateLibraryAttributesParamsWithHTTPClient creates a new UpdateLibraryAttributesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateLibraryAttributesParamsWithHTTPClient(client *http.Client) *UpdateLibraryAttributesParams {
	var ()
	return &UpdateLibraryAttributesParams{
		HTTPClient: client,
	}
}

/*UpdateLibraryAttributesParams contains all the parameters to send to the API endpoint
for the update library attributes operation typically these are written to a http.Request
*/
type UpdateLibraryAttributesParams struct {

	/*Library
	  Library object to be updated

	*/
	Library Library.Library
	/*ResourceID
	  resource's id

	*/
	ResourceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update library attributes params
func (o *UpdateLibraryAttributesParams) WithTimeout(timeout time.Duration) *UpdateLibraryAttributesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update library attributes params
func (o *UpdateLibraryAttributesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update library attributes params
func (o *UpdateLibraryAttributesParams) WithContext(ctx context.Context) *UpdateLibraryAttributesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update library attributes params
func (o *UpdateLibraryAttributesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update library attributes params
func (o *UpdateLibraryAttributesParams) WithHTTPClient(client *http.Client) *UpdateLibraryAttributesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update library attributes params
func (o *UpdateLibraryAttributesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLibrary adds the library to the update library attributes params
func (o *UpdateLibraryAttributesParams) WithLibrary(library Library.Library) *UpdateLibraryAttributesParams {
	o.SetLibrary(library)
	return o
}

// SetLibrary adds the library to the update library attributes params
func (o *UpdateLibraryAttributesParams) SetLibrary(library Library.Library) {
	o.Library = library
}

// WithResourceID adds the resourceID to the update library attributes params
func (o *UpdateLibraryAttributesParams) WithResourceID(resourceID string) *UpdateLibraryAttributesParams {
	o.SetResourceID(resourceID)
	return o
}

// SetResourceID adds the resourceId to the update library attributes params
func (o *UpdateLibraryAttributesParams) SetResourceID(resourceID string) {
	o.ResourceID = resourceID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateLibraryAttributesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Library != nil {
		if err := r.SetBodyParam(o.Library); err != nil {
			return err
		}
	}

	// path param resourceId
	if err := r.SetPathParam("resourceId", o.ResourceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
