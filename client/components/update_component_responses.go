// Code generated by go-swagger; DO NOT EDIT.

package components

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kathra-project/kathra-resourcemanager-client-go/models"
)

// UpdateComponentReader is a Reader for the UpdateComponent structure.
type UpdateComponentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateComponentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateComponentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateComponentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateComponentOK creates a UpdateComponentOK with default headers values
func NewUpdateComponentOK() *UpdateComponentOK {
	return &UpdateComponentOK{}
}

/*UpdateComponentOK handles this case with default header values.

Returns the modified object
*/
type UpdateComponentOK struct {
	Payload *models.Component
}

func (o *UpdateComponentOK) Error() string {
	return fmt.Sprintf("[PUT /components/{resourceId}][%d] updateComponentOK  %+v", 200, o.Payload)
}

func (o *UpdateComponentOK) GetPayload() *models.Component {
	return o.Payload
}

func (o *UpdateComponentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Component)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateComponentUnauthorized creates a UpdateComponentUnauthorized with default headers values
func NewUpdateComponentUnauthorized() *UpdateComponentUnauthorized {
	return &UpdateComponentUnauthorized{}
}

/*UpdateComponentUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateComponentUnauthorized struct {
}

func (o *UpdateComponentUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /components/{resourceId}][%d] updateComponentUnauthorized ", 401)
}

func (o *UpdateComponentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
