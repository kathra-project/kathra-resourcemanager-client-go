// Code generated by go-swagger; DO NOT EDIT.

package binary_repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kathra-project/kathra-resourcemanager-client-go/models"
)

// UpdateBinaryRepositoryReader is a Reader for the UpdateBinaryRepository structure.
type UpdateBinaryRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBinaryRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBinaryRepositoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateBinaryRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateBinaryRepositoryOK creates a UpdateBinaryRepositoryOK with default headers values
func NewUpdateBinaryRepositoryOK() *UpdateBinaryRepositoryOK {
	return &UpdateBinaryRepositoryOK{}
}

/*UpdateBinaryRepositoryOK handles this case with default header values.

Returns the modified object
*/
type UpdateBinaryRepositoryOK struct {
	Payload models.BinaryRepository
}

func (o *UpdateBinaryRepositoryOK) Error() string {
	return fmt.Sprintf("[PUT /binaryrepositories/{resourceId}][%d] updateBinaryRepositoryOK  %+v", 200, o.Payload)
}

func (o *UpdateBinaryRepositoryOK) GetPayload() models.BinaryRepository {
	return o.Payload
}

func (o *UpdateBinaryRepositoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBinaryRepositoryUnauthorized creates a UpdateBinaryRepositoryUnauthorized with default headers values
func NewUpdateBinaryRepositoryUnauthorized() *UpdateBinaryRepositoryUnauthorized {
	return &UpdateBinaryRepositoryUnauthorized{}
}

/*UpdateBinaryRepositoryUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateBinaryRepositoryUnauthorized struct {
}

func (o *UpdateBinaryRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /binaryrepositories/{resourceId}][%d] updateBinaryRepositoryUnauthorized ", 401)
}

func (o *UpdateBinaryRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
