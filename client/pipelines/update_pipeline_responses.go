// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kathra-project/kathra-resourcemanager-client-go/models"
)

// UpdatePipelineReader is a Reader for the UpdatePipeline structure.
type UpdatePipelineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePipelineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePipelineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdatePipelineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdatePipelineOK creates a UpdatePipelineOK with default headers values
func NewUpdatePipelineOK() *UpdatePipelineOK {
	return &UpdatePipelineOK{}
}

/*UpdatePipelineOK handles this case with default header values.

Returns the modified object
*/
type UpdatePipelineOK struct {
	Payload models.Pipeline
}

func (o *UpdatePipelineOK) Error() string {
	return fmt.Sprintf("[PUT /pipelines/{resourceId}][%d] updatePipelineOK  %+v", 200, o.Payload)
}

func (o *UpdatePipelineOK) GetPayload() models.Pipeline {
	return o.Payload
}

func (o *UpdatePipelineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePipelineUnauthorized creates a UpdatePipelineUnauthorized with default headers values
func NewUpdatePipelineUnauthorized() *UpdatePipelineUnauthorized {
	return &UpdatePipelineUnauthorized{}
}

/*UpdatePipelineUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdatePipelineUnauthorized struct {
}

func (o *UpdatePipelineUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /pipelines/{resourceId}][%d] updatePipelineUnauthorized ", 401)
}

func (o *UpdatePipelineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
