// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kathra-project/kathra-resourcemanager-client-go/models"
)

// GetPipelinesReader is a Reader for the GetPipelines structure.
type GetPipelinesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPipelinesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPipelinesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPipelinesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPipelinesOK creates a GetPipelinesOK with default headers values
func NewGetPipelinesOK() *GetPipelinesOK {
	return &GetPipelinesOK{}
}

/*GetPipelinesOK handles this case with default header values.

List of accessible pipelines for the authenticated user
*/
type GetPipelinesOK struct {
	Payload []*models.Pipeline
}

func (o *GetPipelinesOK) Error() string {
	return fmt.Sprintf("[GET /pipelines][%d] getPipelinesOK  %+v", 200, o.Payload)
}

func (o *GetPipelinesOK) GetPayload() []*models.Pipeline {
	return o.Payload
}

func (o *GetPipelinesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPipelinesUnauthorized creates a GetPipelinesUnauthorized with default headers values
func NewGetPipelinesUnauthorized() *GetPipelinesUnauthorized {
	return &GetPipelinesUnauthorized{}
}

/*GetPipelinesUnauthorized handles this case with default header values.

Unauthorized
*/
type GetPipelinesUnauthorized struct {
}

func (o *GetPipelinesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /pipelines][%d] getPipelinesUnauthorized ", 401)
}

func (o *GetPipelinesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
