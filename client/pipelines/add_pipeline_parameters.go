// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	Pipeline "github.com/kathra-project/kathra-core-model-go/models"
)

// NewAddPipelineParams creates a new AddPipelineParams object
// with the default values initialized.
func NewAddPipelineParams() *AddPipelineParams {
	var ()
	return &AddPipelineParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAddPipelineParamsWithTimeout creates a new AddPipelineParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddPipelineParamsWithTimeout(timeout time.Duration) *AddPipelineParams {
	var ()
	return &AddPipelineParams{

		timeout: timeout,
	}
}

// NewAddPipelineParamsWithContext creates a new AddPipelineParams object
// with the default values initialized, and the ability to set a context for a request
func NewAddPipelineParamsWithContext(ctx context.Context) *AddPipelineParams {
	var ()
	return &AddPipelineParams{

		Context: ctx,
	}
}

// NewAddPipelineParamsWithHTTPClient creates a new AddPipelineParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAddPipelineParamsWithHTTPClient(client *http.Client) *AddPipelineParams {
	var ()
	return &AddPipelineParams{
		HTTPClient: client,
	}
}

/*AddPipelineParams contains all the parameters to send to the API endpoint
for the add pipeline operation typically these are written to a http.Request
*/
type AddPipelineParams struct {

	/*Pipeline
	  Pipeline object to be created

	*/
	Pipeline Pipeline.Pipeline

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the add pipeline params
func (o *AddPipelineParams) WithTimeout(timeout time.Duration) *AddPipelineParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add pipeline params
func (o *AddPipelineParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add pipeline params
func (o *AddPipelineParams) WithContext(ctx context.Context) *AddPipelineParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add pipeline params
func (o *AddPipelineParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add pipeline params
func (o *AddPipelineParams) WithHTTPClient(client *http.Client) *AddPipelineParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add pipeline params
func (o *AddPipelineParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPipeline adds the pipeline to the add pipeline params
func (o *AddPipelineParams) WithPipeline(pipeline Pipeline.Pipeline) *AddPipelineParams {
	o.SetPipeline(pipeline)
	return o
}

// SetPipeline adds the pipeline to the add pipeline params
func (o *AddPipelineParams) SetPipeline(pipeline Pipeline.Pipeline) {
	o.Pipeline = pipeline
}

// WriteToRequest writes these params to a swagger request
func (o *AddPipelineParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Pipeline != nil {
		if err := r.SetBodyParam(o.Pipeline); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
