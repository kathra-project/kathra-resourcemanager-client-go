// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	Pipeline "github.com/kathra-project/kathra-core-model-go/models"
)

// AddPipelineReader is a Reader for the AddPipeline structure.
type AddPipelineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddPipelineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddPipelineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddPipelineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddPipelineOK creates a AddPipelineOK with default headers values
func NewAddPipelineOK() *AddPipelineOK {
	return &AddPipelineOK{}
}

/*AddPipelineOK handles this case with default header values.

Returns the created object
*/
type AddPipelineOK struct {
	Payload Pipeline.Pipeline
}

func (o *AddPipelineOK) Error() string {
	return fmt.Sprintf("[POST /pipelines][%d] addPipelineOK  %+v", 200, o.Payload)
}

func (o *AddPipelineOK) GetPayload() Pipeline.Pipeline {
	return o.Payload
}

func (o *AddPipelineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPipelineUnauthorized creates a AddPipelineUnauthorized with default headers values
func NewAddPipelineUnauthorized() *AddPipelineUnauthorized {
	return &AddPipelineUnauthorized{}
}

/*AddPipelineUnauthorized handles this case with default header values.

Unauthorized
*/
type AddPipelineUnauthorized struct {
}

func (o *AddPipelineUnauthorized) Error() string {
	return fmt.Sprintf("[POST /pipelines][%d] addPipelineUnauthorized ", 401)
}

func (o *AddPipelineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
