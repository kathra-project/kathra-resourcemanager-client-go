// Code generated by go-swagger; DO NOT EDIT.

package implementations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteImplementationParams creates a new DeleteImplementationParams object
// with the default values initialized.
func NewDeleteImplementationParams() *DeleteImplementationParams {
	var ()
	return &DeleteImplementationParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteImplementationParamsWithTimeout creates a new DeleteImplementationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteImplementationParamsWithTimeout(timeout time.Duration) *DeleteImplementationParams {
	var ()
	return &DeleteImplementationParams{

		timeout: timeout,
	}
}

// NewDeleteImplementationParamsWithContext creates a new DeleteImplementationParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteImplementationParamsWithContext(ctx context.Context) *DeleteImplementationParams {
	var ()
	return &DeleteImplementationParams{

		Context: ctx,
	}
}

// NewDeleteImplementationParamsWithHTTPClient creates a new DeleteImplementationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteImplementationParamsWithHTTPClient(client *http.Client) *DeleteImplementationParams {
	var ()
	return &DeleteImplementationParams{
		HTTPClient: client,
	}
}

/*DeleteImplementationParams contains all the parameters to send to the API endpoint
for the delete implementation operation typically these are written to a http.Request
*/
type DeleteImplementationParams struct {

	/*ResourceID
	  resource's id

	*/
	ResourceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete implementation params
func (o *DeleteImplementationParams) WithTimeout(timeout time.Duration) *DeleteImplementationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete implementation params
func (o *DeleteImplementationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete implementation params
func (o *DeleteImplementationParams) WithContext(ctx context.Context) *DeleteImplementationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete implementation params
func (o *DeleteImplementationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete implementation params
func (o *DeleteImplementationParams) WithHTTPClient(client *http.Client) *DeleteImplementationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete implementation params
func (o *DeleteImplementationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithResourceID adds the resourceID to the delete implementation params
func (o *DeleteImplementationParams) WithResourceID(resourceID string) *DeleteImplementationParams {
	o.SetResourceID(resourceID)
	return o
}

// SetResourceID adds the resourceId to the delete implementation params
func (o *DeleteImplementationParams) SetResourceID(resourceID string) {
	o.ResourceID = resourceID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteImplementationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param resourceId
	if err := r.SetPathParam("resourceId", o.ResourceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
