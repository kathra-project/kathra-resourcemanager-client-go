// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kathra-project/kathra-resourcemanager-client-go/models"
)

// UpdateGroupReader is a Reader for the UpdateGroup structure.
type UpdateGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateGroupOK creates a UpdateGroupOK with default headers values
func NewUpdateGroupOK() *UpdateGroupOK {
	return &UpdateGroupOK{}
}

/*UpdateGroupOK handles this case with default header values.

Returns the modified object
*/
type UpdateGroupOK struct {
	Payload *models.Group
}

func (o *UpdateGroupOK) Error() string {
	return fmt.Sprintf("[PUT /groups/{resourceId}][%d] updateGroupOK  %+v", 200, o.Payload)
}

func (o *UpdateGroupOK) GetPayload() *models.Group {
	return o.Payload
}

func (o *UpdateGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Group)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGroupUnauthorized creates a UpdateGroupUnauthorized with default headers values
func NewUpdateGroupUnauthorized() *UpdateGroupUnauthorized {
	return &UpdateGroupUnauthorized{}
}

/*UpdateGroupUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateGroupUnauthorized struct {
}

func (o *UpdateGroupUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /groups/{resourceId}][%d] updateGroupUnauthorized ", 401)
}

func (o *UpdateGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
