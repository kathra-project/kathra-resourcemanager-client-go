// Code generated by go-swagger; DO NOT EDIT.

package assignations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteAssignationReader is a Reader for the DeleteAssignation structure.
type DeleteAssignationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAssignationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAssignationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteAssignationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteAssignationOK creates a DeleteAssignationOK with default headers values
func NewDeleteAssignationOK() *DeleteAssignationOK {
	return &DeleteAssignationOK{}
}

/*DeleteAssignationOK handles this case with default header values.

Object is deleted
*/
type DeleteAssignationOK struct {
	Payload string
}

func (o *DeleteAssignationOK) Error() string {
	return fmt.Sprintf("[DELETE /assignations/{resourceId}][%d] deleteAssignationOK  %+v", 200, o.Payload)
}

func (o *DeleteAssignationOK) GetPayload() string {
	return o.Payload
}

func (o *DeleteAssignationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAssignationUnauthorized creates a DeleteAssignationUnauthorized with default headers values
func NewDeleteAssignationUnauthorized() *DeleteAssignationUnauthorized {
	return &DeleteAssignationUnauthorized{}
}

/*DeleteAssignationUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteAssignationUnauthorized struct {
}

func (o *DeleteAssignationUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /assignations/{resourceId}][%d] deleteAssignationUnauthorized ", 401)
}

func (o *DeleteAssignationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
