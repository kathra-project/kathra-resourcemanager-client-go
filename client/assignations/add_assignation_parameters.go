// Code generated by go-swagger; DO NOT EDIT.

package assignations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	Assignation "github.com/kathra-project/kathra-core-model-go/models"
)

// NewAddAssignationParams creates a new AddAssignationParams object
// with the default values initialized.
func NewAddAssignationParams() *AddAssignationParams {
	var ()
	return &AddAssignationParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAddAssignationParamsWithTimeout creates a new AddAssignationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddAssignationParamsWithTimeout(timeout time.Duration) *AddAssignationParams {
	var ()
	return &AddAssignationParams{

		timeout: timeout,
	}
}

// NewAddAssignationParamsWithContext creates a new AddAssignationParams object
// with the default values initialized, and the ability to set a context for a request
func NewAddAssignationParamsWithContext(ctx context.Context) *AddAssignationParams {
	var ()
	return &AddAssignationParams{

		Context: ctx,
	}
}

// NewAddAssignationParamsWithHTTPClient creates a new AddAssignationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAddAssignationParamsWithHTTPClient(client *http.Client) *AddAssignationParams {
	var ()
	return &AddAssignationParams{
		HTTPClient: client,
	}
}

/*AddAssignationParams contains all the parameters to send to the API endpoint
for the add assignation operation typically these are written to a http.Request
*/
type AddAssignationParams struct {

	/*Assignation
	  Assignation object to be created

	*/
	Assignation Assignation.CatalogEnAssignationtry

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the add assignation params
func (o *AddAssignationParams) WithTimeout(timeout time.Duration) *AddAssignationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add assignation params
func (o *AddAssignationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add assignation params
func (o *AddAssignationParams) WithContext(ctx context.Context) *AddAssignationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add assignation params
func (o *AddAssignationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add assignation params
func (o *AddAssignationParams) WithHTTPClient(client *http.Client) *AddAssignationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add assignation params
func (o *AddAssignationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAssignation adds the assignation to the add assignation params
func (o *AddAssignationParams) WithAssignation(assignation Assignation.CatalogEnAssignationtry) *AddAssignationParams {
	o.SetAssignation(assignation)
	return o
}

// SetAssignation adds the assignation to the add assignation params
func (o *AddAssignationParams) SetAssignation(assignation Assignation.CatalogEnAssignationtry) {
	o.Assignation = assignation
}

// WriteToRequest writes these params to a swagger request
func (o *AddAssignationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Assignation != nil {
		if err := r.SetBodyParam(o.Assignation); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
