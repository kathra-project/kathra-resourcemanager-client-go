// Code generated by go-swagger; DO NOT EDIT.

package assignations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	Assignation "github.com/kathra-project/kathra-core-model-go/models"
)

// GetAssignationReader is a Reader for the GetAssignation structure.
type GetAssignationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAssignationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAssignationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAssignationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAssignationOK creates a GetAssignationOK with default headers values
func NewGetAssignationOK() *GetAssignationOK {
	return &GetAssignationOK{}
}

/*GetAssignationOK handles this case with default header values.

Returns the object
*/
type GetAssignationOK struct {
	Payload Assignation.Assignation
}

func (o *GetAssignationOK) Error() string {
	return fmt.Sprintf("[GET /assignations/{resourceId}][%d] getAssignationOK  %+v", 200, o.Payload)
}

func (o *GetAssignationOK) GetPayload() Assignation.Assignation {
	return o.Payload
}

func (o *GetAssignationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssignationUnauthorized creates a GetAssignationUnauthorized with default headers values
func NewGetAssignationUnauthorized() *GetAssignationUnauthorized {
	return &GetAssignationUnauthorized{}
}

/*GetAssignationUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAssignationUnauthorized struct {
}

func (o *GetAssignationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /assignations/{resourceId}][%d] getAssignationUnauthorized ", 401)
}

func (o *GetAssignationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
