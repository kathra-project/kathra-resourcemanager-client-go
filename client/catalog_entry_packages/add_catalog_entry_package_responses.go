// Code generated by go-swagger; DO NOT EDIT.

package catalog_entry_packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	CatalogEntryPackage "github.com/kathra-project/kathra-core-model-go/models"
)

// AddCatalogEntryPackageReader is a Reader for the AddCatalogEntryPackage structure.
type AddCatalogEntryPackageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddCatalogEntryPackageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddCatalogEntryPackageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddCatalogEntryPackageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddCatalogEntryPackageOK creates a AddCatalogEntryPackageOK with default headers values
func NewAddCatalogEntryPackageOK() *AddCatalogEntryPackageOK {
	return &AddCatalogEntryPackageOK{}
}

/*AddCatalogEntryPackageOK handles this case with default header values.

Returns the created object
*/
type AddCatalogEntryPackageOK struct {
	Payload CatalogEntryPackage.CatalogEntryPackage
}

func (o *AddCatalogEntryPackageOK) Error() string {
	return fmt.Sprintf("[POST /catalogentrypackages][%d] addCatalogEntryPackageOK  %+v", 200, o.Payload)
}

func (o *AddCatalogEntryPackageOK) GetPayload() CatalogEntryPackage.CatalogEntryPackage {
	return o.Payload
}

func (o *AddCatalogEntryPackageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddCatalogEntryPackageUnauthorized creates a AddCatalogEntryPackageUnauthorized with default headers values
func NewAddCatalogEntryPackageUnauthorized() *AddCatalogEntryPackageUnauthorized {
	return &AddCatalogEntryPackageUnauthorized{}
}

/*AddCatalogEntryPackageUnauthorized handles this case with default header values.

Unauthorized
*/
type AddCatalogEntryPackageUnauthorized struct {
}

func (o *AddCatalogEntryPackageUnauthorized) Error() string {
	return fmt.Sprintf("[POST /catalogentrypackages][%d] addCatalogEntryPackageUnauthorized ", 401)
}

func (o *AddCatalogEntryPackageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
