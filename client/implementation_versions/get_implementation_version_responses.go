// Code generated by go-swagger; DO NOT EDIT.

package implementation_versions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kathra-project/kathra-resourcemanager-client-go/models"
)

// GetImplementationVersionReader is a Reader for the GetImplementationVersion structure.
type GetImplementationVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetImplementationVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetImplementationVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetImplementationVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetImplementationVersionOK creates a GetImplementationVersionOK with default headers values
func NewGetImplementationVersionOK() *GetImplementationVersionOK {
	return &GetImplementationVersionOK{}
}

/*GetImplementationVersionOK handles this case with default header values.

Returns the object
*/
type GetImplementationVersionOK struct {
	Payload models.ImplementationVersion
}

func (o *GetImplementationVersionOK) Error() string {
	return fmt.Sprintf("[GET /implementationversions/{resourceId}][%d] getImplementationVersionOK  %+v", 200, o.Payload)
}

func (o *GetImplementationVersionOK) GetPayload() models.ImplementationVersion {
	return o.Payload
}

func (o *GetImplementationVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetImplementationVersionUnauthorized creates a GetImplementationVersionUnauthorized with default headers values
func NewGetImplementationVersionUnauthorized() *GetImplementationVersionUnauthorized {
	return &GetImplementationVersionUnauthorized{}
}

/*GetImplementationVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type GetImplementationVersionUnauthorized struct {
}

func (o *GetImplementationVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /implementationversions/{resourceId}][%d] getImplementationVersionUnauthorized ", 401)
}

func (o *GetImplementationVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
